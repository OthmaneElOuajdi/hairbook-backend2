# === Configuration de l'application ===
spring.application.name=hairbook-backend
# Port du serveur (valeur par défaut : 8082 si non défini dans .env)
server.port=${SERVER_PORT:8082}
# === Configuration de la base de données ===
# URL de connexion à la base (Docker : db:5432, Local : localhost)
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/hairbook}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:postgres123}
spring.datasource.driver-class-name=org.postgresql.Driver
# === JPA / Hibernate ===
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:true}
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# === Configuration JWT (authentification) ===
# Clé secrète et durées de validité (en millisecondes)
app.jwt.secret=${JWT_SECRET}
app.jwt.expiration=${JWT_EXPIRATION}
app.jwt.refresh-expiration=${JWT_REFRESH_EXPIRATION}
# === Configuration des e-mails ===
spring.mail.host=${SPRING_MAIL_HOST}
spring.mail.port=${SPRING_MAIL_PORT}
spring.mail.username=${SPRING_MAIL_USERNAME}
spring.mail.password=${SPRING_MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH}
spring.mail.properties.mail.smtp.starttls.enable=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE}

# === Intégration Stripe (paiement) ===
app.stripe.api.key=${STRIPE_API_KEY}
app.stripe.webhook.secret=${STRIPE_WEBHOOK_SECRET}

# === Configuration du téléversement de fichiers ===
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
app.file.upload-dir=./uploads

# === Configuration Actuator (monitoring) ===
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.info.env.enabled=true
info.app.name=${spring.application.name}
info.app.description=Backend REST API pour la réservation d'un salon de coiffure
info.app.version=1.0.0

# === Configuration des logs ===
logging.level.root=INFO
logging.level.com.hairbook=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=ERROR

# === Configuration Swagger / OpenAPI ===
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method

# === Configuration des notifications ===
app.notification.email.enabled=true
app.notification.sms.enabled=false